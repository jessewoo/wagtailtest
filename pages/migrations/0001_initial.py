# Generated by Django 5.2.5 on 2025-09-30 22:38

import django.db.models.deletion
import modelcluster.fields
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0095_groupsitepermission'),
    ]

    operations = [
        migrations.CreateModel(
            name='AboutPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('intro', wagtail.fields.RichTextField(blank=True, help_text='Introduction about the organization')),
                ('mission', wagtail.fields.RichTextField(blank=True, help_text='Mission statement')),
                ('vision', wagtail.fields.RichTextField(blank=True, help_text='Vision statement')),
                ('body', wagtail.fields.RichTextField(blank=True, help_text='Additional content')),
            ],
            options={
                'verbose_name': 'About Page',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ContactPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('address', models.TextField(blank=True)),
                ('body', wagtail.fields.RichTextField(blank=True, help_text='Additional contact information')),
                ('facebook_url', models.URLField(blank=True, verbose_name='Facebook URL')),
                ('twitter_url', models.URLField(blank=True, verbose_name='Twitter/X URL')),
                ('linkedin_url', models.URLField(blank=True, verbose_name='LinkedIn URL')),
                ('instagram_url', models.URLField(blank=True, verbose_name='Instagram URL')),
            ],
            options={
                'verbose_name': 'Contact Page',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='FAQPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('intro', wagtail.fields.RichTextField(blank=True, help_text='Introduction to FAQs')),
            ],
            options={
                'verbose_name': 'FAQ Page',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='FlexiblePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('subtitle', models.CharField(blank=True, help_text='Optional subtitle for the page', max_length=255)),
                ('body', wagtail.fields.StreamField([('heading', 0), ('paragraph', 1), ('image', 2), ('embed', 3), ('document', 4), ('call_to_action', 10), ('quote', 13), ('columns', 17), ('anchor', 18)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'form_classname': 'title', 'icon': 'title', 'max_length': 255}), 1: ('wagtail.blocks.RichTextBlock', (), {'icon': 'pilcrow'}), 2: ('wagtail.images.blocks.ImageChooserBlock', (), {'icon': 'image'}), 3: ('wagtail.embeds.blocks.EmbedBlock', (), {'icon': 'media'}), 4: ('wagtail.documents.blocks.DocumentChooserBlock', (), {'icon': 'doc-full-inverse'}), 5: ('wagtail.blocks.CharBlock', (), {'max_length': 255}), 6: ('wagtail.blocks.RichTextBlock', (), {}), 7: ('wagtail.blocks.CharBlock', (), {'max_length': 50}), 8: ('wagtail.blocks.URLBlock', (), {'required': False}), 9: ('wagtail.blocks.PageChooserBlock', (), {'required': False}), 10: ('wagtail.blocks.StructBlock', [[('title', 5), ('text', 6), ('button_text', 7), ('button_link', 8), ('button_page', 9)]], {'icon': 'plus-inverse'}), 11: ('wagtail.blocks.TextBlock', (), {}), 12: ('wagtail.blocks.CharBlock', (), {'max_length': 100, 'required': False}), 13: ('wagtail.blocks.StructBlock', [[('text', 11), ('author', 12), ('author_title', 12)]], {'icon': 'openquote'}), 14: ('wagtail.blocks.CharBlock', (), {'max_length': 255, 'required': False}), 15: ('wagtail.blocks.StructBlock', [[('heading', 14), ('content', 6)]], {}), 16: ('wagtail.blocks.ListBlock', (15,), {}), 17: ('wagtail.blocks.StructBlock', [[('columns', 16)]], {'icon': 'grip'}), 18: ('wagtail.blocks.CharBlock', (), {'help_text': 'Add an anchor/ID for linking to this section', 'icon': 'link', 'max_length': 100})})),
            ],
            options={
                'verbose_name': 'Flexible Page',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ServicePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('description', wagtail.fields.RichTextField(blank=True, help_text='Service description')),
                ('features', wagtail.fields.RichTextField(blank=True, help_text='Key features or benefits')),
                ('pricing_info', models.CharField(blank=True, help_text='Pricing information', max_length=255)),
            ],
            options={
                'verbose_name': 'Service Page',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ServicesPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('intro', wagtail.fields.RichTextField(blank=True, help_text='Introduction to services')),
            ],
            options={
                'verbose_name': 'Services Page',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='StandardPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('intro', models.TextField(blank=True, help_text='Optional introduction text')),
                ('body', wagtail.fields.RichTextField(blank=True)),
            ],
            options={
                'verbose_name': 'Standard Page',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='FAQItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255)),
                ('answer', wagtail.fields.RichTextField()),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='faq_items', to='pages.faqpage')),
            ],
            options={
                'verbose_name': 'FAQ Item',
                'verbose_name_plural': 'FAQ Items',
            },
        ),
    ]
